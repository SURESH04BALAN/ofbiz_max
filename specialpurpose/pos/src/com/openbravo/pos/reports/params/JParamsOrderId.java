//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.

package com.openbravo.pos.reports.params;

import com.openbravo.basic.BasicException;
import java.awt.Component;
//import com.openbravo.pos.forms.AppLocal;
import java.awt.BorderLayout;
import java.util.HashMap;
import java.util.Map;
import org.ofbiz.entity.condition.EntityCondition;
import org.ofbiz.ordermax.base.ControllerOptions;

public class JParamsOrderId extends ParamReportEditor {
         public String getEditorClassName(){
        return "JParamsOrderId";
    }
    /** Creates new form JParamsClosedPos */
    org.ofbiz.ordermax.base.components.OrderPickerEditPanel pickerEditPanel = null;
    final String labelText ;
    public JParamsOrderId(String labelText) {
        this.labelText = labelText;
        initComponents();
        pickerEditPanel = new org.ofbiz.ordermax.base.components.OrderPickerEditPanel(new ControllerOptions());
        panelPartyId.setLayout(new BorderLayout());
        panelPartyId.add(BorderLayout.CENTER, pickerEditPanel);
 
    }
    
    @Override
    public Component getComponent() {
        return this;
    }
    
    
    @Override
    public EntityCondition getEntityCondition() {
        return pickerEditPanel.getEntityCondition();
    }
    
    @Override
    public Map<String, Object> getValues() throws BasicException {
        Map<String, Object> values = new HashMap<String, Object>();
        values.put(pickerEditPanel.keyId, pickerEditPanel.getEntityValue());
        return values;
    }     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        panelPartyId = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));
        setPreferredSize(new java.awt.Dimension(200, 50));
        setLayout(null);

        jLabel1.setLabelFor(panelPartyId);
        jLabel1.setText(labelText);
        add(jLabel1);
        jLabel1.setBounds(20, 20, 120, 16);
        jLabel1.getAccessibleContext().setAccessibleName("");

        panelPartyId.setPreferredSize(new java.awt.Dimension(100, 24));
        add(panelPartyId);
        panelPartyId.setBounds(140, 20, 300, 24);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panelPartyId;
    // End of variables declaration//GEN-END:variables
    
}

