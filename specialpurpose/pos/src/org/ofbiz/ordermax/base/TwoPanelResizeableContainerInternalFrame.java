/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ofbiz.ordermax.base;

import java.awt.event.ActionListener;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author siranjeev
 */
public class TwoPanelResizeableContainerInternalFrame extends javax.swing.JInternalFrame implements ContainerPanelInterface {

    /**
     * Creates new form ThreePanelContainerInternalFrame
     * @param ownerName
     */
    public TwoPanelResizeableContainerInternalFrame(final String ownerName) {
        initComponents();
        this.ownerName = ownerName;
        
        setMaximizable(true);
        setIconifiable(true);
        setClosable(true);
        setResizable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parentPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        panelSelecton = new javax.swing.JPanel();
        panelDetail = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setNormalBounds(new java.awt.Rectangle(0, 0, 0, 0));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        parentPanel.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setBorder(null);
        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(200, 297));

        panelSelecton.setForeground(new java.awt.Color(255, 0, 51));
        panelSelecton.setMinimumSize(new java.awt.Dimension(0, 0));
        panelSelecton.setPreferredSize(new java.awt.Dimension(403, 200));

        javax.swing.GroupLayout panelSelectonLayout = new javax.swing.GroupLayout(panelSelecton);
        panelSelecton.setLayout(panelSelectonLayout);
        panelSelectonLayout.setHorizontalGroup(
            panelSelectonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 199, Short.MAX_VALUE)
        );
        panelSelectonLayout.setVerticalGroup(
            panelSelectonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(panelSelecton);

        javax.swing.GroupLayout panelDetailLayout = new javax.swing.GroupLayout(panelDetail);
        panelDetail.setLayout(panelDetailLayout);
        panelDetailLayout.setHorizontalGroup(
            panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );
        panelDetailLayout.setVerticalGroup(
            panelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(panelDetail);

        jPanel3.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        parentPanel.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(parentPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public JPanel getPanelDetail() {
        return panelDetail;
    }

    public JPanel getPanelSelecton() {
        return panelSelecton;
    }

    public JPanel getjPanel1() {
        return panelDetail;
    }
    public JTextField textField = null;

    @Override
    public void setVisible(boolean value) {
        super.setVisible(value);
        if (textField != null) {
            textField.requestFocusInWindow();
        }
    }
   public JPanel getPanelParent(){
        return parentPanel;
    }

    private ContainerPanelInterface.ReturnStausType returnStatus = ContainerPanelInterface.ReturnStausType.RET_CANCEL;

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public ContainerPanelInterface.ReturnStausType getReturnStatus() {
        return returnStatus;
    }

    private void doClose(ContainerPanelInterface.ReturnStausType retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    public void okButtonPressed() {
        doClose(ContainerPanelInterface.ReturnStausType.RET_OK);
    }

    @Override
    public void cancelButtonPressed() {
        doClose(ContainerPanelInterface.ReturnStausType.RET_CANCEL);
    }
    
    @Override
    public void addActionListener(ActionListener listener) {
        listeners.add(listener);
    }

    @Override
    public void removeActionListener(ActionListener listener) {
        listeners.remove(listener);
    }    
    /*
     @Override
     public void setVisible(final boolean visible) {
     // make sure that frame is marked as not disposed if it is asked to be visible
     //        if (visible) {
     //            setDisposed(false);
     //        }
     // let's handle visibility...
     if (!visible || !isVisible()) { // have to check this condition simply because super.setVisible(true) invokes toFront if frame was already visible
     super.setVisible(visible);
     }
     // ...and bring frame to the front.. in a strange and weird way
     if (visible) {
     int state = super.getExtendedState();
     state &= ~JFrame.ICONIFIED;
     super.setExtendedState(state);
     super.setAlwaysOnTop(true);
     super.toFront();
     super.requestFocus();
     super.setAlwaysOnTop(false);
     }
     if (textField != null) {
     textField.requestFocusInWindow();
     }
     }

     @Override
     public void toFront() {
     super.setVisible(true);
     int state = super.getExtendedState();
     state &= ~JFrame.ICONIFIED;
     super.setExtendedState(state);
     super.setAlwaysOnTop(true);
     super.toFront();
     super.requestFocus();
     super.setAlwaysOnTop(false);
     }
     */
    protected String ownerName = null;

    public String getOwnerName() {
        return ownerName;
    }

    public void setDividerLocation(int value) {
        jSplitPane1.setDividerLocation(value);
    }
    public void setCaption(String title){
            setTitle(title);    
    }
    @Override
    public ContainerType getContainerType() {
        return ContainerType.TwoPanelInternalContainer;
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel panelDetail;
    private javax.swing.JPanel panelSelecton;
    private javax.swing.JPanel parentPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public JPanel getPanelButton() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
