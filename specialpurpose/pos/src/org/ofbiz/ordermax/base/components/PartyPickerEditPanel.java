/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ofbiz.ordermax.base.components;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.SerializerWrite;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.reports.ReportEditorCreator;
import java.awt.BorderLayout;
import java.awt.Component;
import java.util.Map;
import javax.swing.JPanel;
import org.ofbiz.base.util.Debug;
import org.ofbiz.base.util.UtilValidate;
import org.ofbiz.entity.condition.EntityCondition;
import org.ofbiz.entity.condition.EntityOperator;
import org.ofbiz.guiapp.xui.XuiSession;
import org.ofbiz.ordermax.base.ControllerOptions;
import org.ofbiz.ordermax.base.ObservingTextField;
import org.ofbiz.ordermax.report.ReportParameterSelectionInterface;
import org.ofbiz.ordermax.utility.LookupActionListner;

/**
 *
 * @author siranjeev
 */
public class PartyPickerEditPanel extends javax.swing.JPanel implements ReportParameterSelectionInterface{

    static public String module = PartyPickerEditPanel.class.getName();
    public static String editorId = "PartyIdTextField";
    public String keyId = "partyId";

    /**
     * Creates new form DatePickerEditPanel
     */
    public PartyPickerEditPanel(ControllerOptions controllerOptions) {
        initComponents();
        if (controllerOptions.contains("keyId")) {
            keyId = (String) controllerOptions.get("keyId");
        }
        textIdField.setText(controllerOptions.getDefaultPartyId());
        controllerOptions.put(editorId, textIdField);
        controllerOptions.setDoubleClickCloseDialog();
        btnHeaderPatryId.addActionListener(new LookupActionListner(LookupActionListnerInterface.LookupType.PartyId, controllerOptions));
        textIdField.setEditable(!controllerOptions.isPartyIdReadOnly());
        btnHeaderPatryId.setEnabled(!controllerOptions.isPartyIdReadOnly());
    }

    public PartyPickerEditPanel(ControllerOptions controllerOptions, JPanel panel) {
        initComponents();
        panel.setLayout(new BorderLayout());
        panel.add(BorderLayout.CENTER, this);
        if (controllerOptions.contains("keyId")) {
            keyId = (String) controllerOptions.get("keyId");
        }
        controllerOptions.put(editorId, textIdField);
        controllerOptions.setDoubleClickCloseDialog();        
        btnHeaderPatryId.addActionListener(new LookupActionListner(LookupActionListnerInterface.LookupType.PartyId, controllerOptions));
    }

    protected XuiSession session = null;

    public XuiSession getSession() {
        return session;
    }

    public void setSession(XuiSession session) {
        this.session = session;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnHeaderPatryId = new javax.swing.JButton();
        textIdField = new ObservingTextField();

        setMinimumSize(new java.awt.Dimension(220, 24));
        setPreferredSize(new java.awt.Dimension(0, 22));
        setLayout(new java.awt.BorderLayout());

        btnHeaderPatryId.setIcon(new javax.swing.ImageIcon("C:\\backup\\ofbiz-12.04.02\\person_small.png")); // NOI18N
        btnHeaderPatryId.setMinimumSize(new java.awt.Dimension(24, 27));
        btnHeaderPatryId.setPreferredSize(new java.awt.Dimension(24, 24));
        btnHeaderPatryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHeaderPatryIdActionPerformed(evt);
            }
        });
        add(btnHeaderPatryId, java.awt.BorderLayout.EAST);
        add(textIdField, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHeaderPatryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHeaderPatryIdActionPerformed

    }//GEN-LAST:event_btnHeaderPatryIdActionPerformed

    @Override
    public EntityCondition getEntityCondition() {
        if (textIdField.getText().isEmpty() == false) {
            return EntityCondition.makeCondition(keyId, EntityOperator.EQUALS, textIdField.getText());
        } else {
            return null;
        }
    }


    public String getEntityId() {
        return keyId;
    }


    public Object getEntityValue() {
        if (UtilValidate.isNotEmpty(textIdField.getText())) {
            return textIdField.getText();
        } else {
            return null;
        }
    }


    public void getValueMap(Map<String, Object> valueMap) {
        String val = (String) getEntityValue();
        if (val != null) {
            valueMap.put(getEntityId(), val);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHeaderPatryId;
    public javax.swing.JTextField textIdField;
    // End of variables declaration//GEN-END:variables

}
