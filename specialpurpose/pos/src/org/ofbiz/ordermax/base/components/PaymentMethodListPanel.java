/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ofbiz.ordermax.base.components;

import java.awt.BorderLayout;
import java.util.Map;
import mvc.model.list.JGenericComboBoxSelectionModel;
import org.ofbiz.entity.condition.EntityCondition;
import org.ofbiz.guiapp.xui.XuiSession;
import org.ofbiz.ordermax.base.ControllerOptions;
import org.ofbiz.ordermax.entity.PaymentMethod;
import org.ofbiz.ordermax.payment.PaymentMethodSingleton;
import org.ofbiz.ordermax.report.ReportParameterSelectionInterface;

/**
 *
 * @author siranjeev
 */
public class PaymentMethodListPanel extends javax.swing.JPanel implements ReportParameterSelectionInterface{

    static public String module = PaymentMethodListPanel.class.getName();
    static String editorId = "paymentMethodId";
    public static String keyId = "paymentMethodId";
    public JGenericComboBoxSelectionModel<PaymentMethod> paymentMethodComboBox = null;
    /**
     * Creates new form DatePickerEditPanel
     */
    public PaymentMethodListPanel(/*ControllerOptions controllerOptions*/) {
        initComponents();
        
//        controllerOptions.put(editorId, textIdField);
//        btnHeaderPatryId.addActionListener(new LookupActionListner(LookupActionListner.LookupType.InvoiceId, controllerOptions));
            paymentMethodComboBox = new JGenericComboBoxSelectionModel<PaymentMethod>(PaymentMethodSingleton.getValueList());
            this.add(paymentMethodComboBox.jComboBox, BorderLayout.CENTER);
    }
    protected XuiSession session = null;

    public XuiSession getSession() {
        return session;
    }

    public void setSession(XuiSession session) {
        this.session = session;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnHeaderPatryId = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        btnHeaderPatryId.setIcon(new javax.swing.ImageIcon("C:\\backup\\ofbiz-12.04.02\\folder_open.jpg")); // NOI18N
        btnHeaderPatryId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHeaderPatryIdActionPerformed(evt);
            }
        });
        add(btnHeaderPatryId, java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHeaderPatryIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHeaderPatryIdActionPerformed

    }//GEN-LAST:event_btnHeaderPatryIdActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHeaderPatryId;
    // End of variables declaration//GEN-END:variables

    @Override
    public EntityCondition getEntityCondition() {
 ///       if (textIdField.getText().isEmpty() == false) {
 //           return EntityCondition.makeCondition(keyId, EntityOperator.EQUALS, textIdField.getText());
 //       } else {
//            return null;
//        }
        return null;
    }

    @Override
    public String getEntityId() {
        return keyId;
    }

    @Override
    public Object getEntityValue() {
  //      if (textIdField.getText().isEmpty() == false) {
  //          return textIdField.getText();
  //      } else {
  //          return null;
  //
    return null;    
    }

   @Override
    public void getValueMap(Map<String, Object> valueMap) {
        String val = (String) getEntityValue();
        if (val != null) {
            valueMap.put(getEntityId(), val);
        }
    }
}
