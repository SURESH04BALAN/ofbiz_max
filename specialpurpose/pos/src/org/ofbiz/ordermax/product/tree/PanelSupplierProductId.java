/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ofbiz.ordermax.product.tree;

import java.awt.BorderLayout;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import org.ofbiz.entity.GenericEntityException;
import org.ofbiz.entity.GenericValue;
import org.ofbiz.ordermax.base.ControllerOptions;
import org.ofbiz.ordermax.base.PosProductHelper;
import org.ofbiz.ordermax.base.components.PartyPickerEditPanel;
import org.ofbiz.ordermax.base.components.ProductPickerEditPanel;

/**
 *
 * @author BBS Auctions
 */
public class PanelSupplierProductId extends javax.swing.JPanel implements ProductTreeFindInterface {

    ProductPickerEditPanel panelProductIdPicker;
    PartyPickerEditPanel panelPartyIdPicker;

    /**
     * Creates new form PanelProductId
     */
    public PanelSupplierProductId(ControllerOptions controllerOptions) {
        initComponents();

        panelPartyIdPicker = new PartyPickerEditPanel(controllerOptions);
        panelSupplierId.setLayout(new BorderLayout());
        panelSupplierId.add(BorderLayout.CENTER, panelPartyIdPicker);

        panelProductIdPicker = new ProductPickerEditPanel(controllerOptions);
        panelProductId.setLayout(new BorderLayout());
        panelProductId.add(BorderLayout.CENTER, panelProductIdPicker);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSupplierId = new javax.swing.JPanel();
        panelProductId = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        panelSupplierId.setPreferredSize(new java.awt.Dimension(200, 24));

        javax.swing.GroupLayout panelSupplierIdLayout = new javax.swing.GroupLayout(panelSupplierId);
        panelSupplierId.setLayout(panelSupplierIdLayout);
        panelSupplierIdLayout.setHorizontalGroup(
            panelSupplierIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );
        panelSupplierIdLayout.setVerticalGroup(
            panelSupplierIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        panelProductId.setPreferredSize(new java.awt.Dimension(200, 24));

        javax.swing.GroupLayout panelProductIdLayout = new javax.swing.GroupLayout(panelProductId);
        panelProductId.setLayout(panelProductIdLayout);
        panelProductIdLayout.setHorizontalGroup(
            panelProductIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );
        panelProductIdLayout.setVerticalGroup(
            panelProductIdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );

        jLabel1.setText("Supplier Id: ");

        jLabel2.setText("Supplier Product Id: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSupplierId, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                    .addComponent(panelProductId, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSupplierId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel panelProductId;
    private javax.swing.JPanel panelSupplierId;
    // End of variables declaration//GEN-END:variables

    @Override
    public List<String> getProductIds() {
        List<String> valList = new ArrayList<String>();

        try {

            List<GenericValue> list = PosProductHelper.getSupplierProductList(panelPartyIdPicker.textIdField.getText(), panelProductIdPicker.textIdField.getText(), ControllerOptions.getSession().getDelegator());
            Iterator<GenericValue> it = list.iterator();
            while (it.hasNext()) {
                GenericValue supproduct = it.next();
                valList.add(supproduct.getString("productId"));
            }
        } catch (GenericEntityException ex) {
            Logger.getLogger(ProductSelectionTreePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return valList;
    }

    @Override
    public JPanel getPanel() {
        return this;
    }

    public String getName() {
        return "Supplier Product Code";
    }

    @Override
    public void addActionListener(ActionListener listener) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    static class CreationFactoryClass implements ProductTreeFindPanelFactoryInterface {

        @Override
        public ProductTreeFindInterface createFind(ControllerOptions options) {
            return new PanelSupplierProductId(options);
        }
    }
}
