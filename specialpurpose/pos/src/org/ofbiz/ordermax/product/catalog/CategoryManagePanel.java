/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ofbiz.ordermax.product.catalog;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JPanel;
import mvc.model.list.ListAdapterListModel;
import org.ofbiz.guiapp.xui.XuiSession;
import org.ofbiz.ordermax.base.ControllerOptions;
import org.ofbiz.ordermax.base.TreeNode;
import org.ofbiz.ordermax.base.components.screen.SimpleFrameMainScreen;
import org.ofbiz.ordermax.base.components.screen.SimpleScreenInterface;
import org.ofbiz.ordermax.screens.action.ActionType;
import org.ofbiz.ordermax.screens.action.ScreenAction;

/**
 *
 * @author siranjeev
 */
public class CategoryManagePanel extends javax.swing.JPanel implements SimpleScreenInterface {

    /**
     * Creates new form CategoryProductManagePanel
     */
    final public static String module = CategoryManagePanel.class.getName();
    XuiSession session;
    CategoryTreeSelectionPanelFrame panelProductSelect;
    //ProductCategoryMovePanelFrame panelMove;
    CategoryCopyPanelFrame panelCopy;

    ControllerOptions options = null;

    public CategoryManagePanel(ControllerOptions options) {
        initComponents();
        this.options = options;
        this.session = ControllerOptions.getSession();
        panelProductSelect = new CategoryTreeSelectionPanelFrame(options);
        panelProductSelection.setLayout(new BorderLayout());
        panelProductSelection.add(BorderLayout.CENTER, panelProductSelect);

        panelCopy = new CategoryCopyPanelFrame(options);
        jpanelProductCopy.setLayout(new BorderLayout());
        jpanelProductCopy.add(BorderLayout.CENTER, panelCopy);

        /*        panelMove = new ProductCategoryMovePanelFrame(options );
         jpanelProductMove.setLayout(new BorderLayout());
         jpanelProductMove.add(BorderLayout.CENTER, panelMove);   
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelProductSelection = new javax.swing.JPanel();
        jpanelProductMove = new javax.swing.JPanel();
        jpanelProductCopy = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelProductSelectionLayout = new javax.swing.GroupLayout(panelProductSelection);
        panelProductSelection.setLayout(panelProductSelectionLayout);
        panelProductSelectionLayout.setHorizontalGroup(
            panelProductSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        panelProductSelectionLayout.setVerticalGroup(
            panelProductSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 252, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Product Selection", panelProductSelection);

        javax.swing.GroupLayout jpanelProductMoveLayout = new javax.swing.GroupLayout(jpanelProductMove);
        jpanelProductMove.setLayout(jpanelProductMoveLayout);
        jpanelProductMoveLayout.setHorizontalGroup(
            jpanelProductMoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        jpanelProductMoveLayout.setVerticalGroup(
            jpanelProductMoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 252, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Product Move", jpanelProductMove);

        javax.swing.GroupLayout jpanelProductCopyLayout = new javax.swing.GroupLayout(jpanelProductCopy);
        jpanelProductCopy.setLayout(jpanelProductCopyLayout);
        jpanelProductCopyLayout.setHorizontalGroup(
            jpanelProductCopyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 395, Short.MAX_VALUE)
        );
        jpanelProductCopyLayout.setVerticalGroup(
            jpanelProductCopyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 252, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Product Copy", jpanelProductCopy);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 30));

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(243, Short.MAX_VALUE)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        System.out.println("Tab: " + jTabbedPane1.getSelectedIndex());
        if (jTabbedPane1.getSelectedIndex() == 1) {
            /*
             ListAdapterListModel<TreeNode>  productSelectModel =  panelProductSelect.getModel();
             ListAdapterListModel<TreeNode>  productMoveModel =  panelMove.getModel();            
             productMoveModel.clear();
             for (int i = 0; i < productSelectModel.getSize(); i++) {
             TreeNode node =  productSelectModel.getElementAt(i);
             productMoveModel.add(node);
             System.out.println("TreeNode parent_catid: " + node.getproductId());                
             }                        
             if(panelProductSelect.getSelectedCatalog()!=null){
             panelMove.setSelectedCatalogId(panelProductSelect.getSelectedCatalog().getprodCatalogId());
             }

             if(panelProductSelect.getSelectedCategory()!=null){
             panelMove.setSelecteCategoryId(panelProductSelect.getSelectedCategory().getProductCategoryId());
             }
             */
        } else if (jTabbedPane1.getSelectedIndex() == 2) {

            ListAdapterListModel<TreeNode> productSelectModel = panelProductSelect.getModel();
            ListAdapterListModel<TreeNode> productMoveModel = panelCopy.getModel();
            productMoveModel.clear();
            for (int i = 0; i < productSelectModel.getSize(); i++) {
                TreeNode node = productSelectModel.getElementAt(i);
                productMoveModel.add(node);
                System.out.println("TreeNode parent_catid: " + node._id);
            }
           // if(panelProductSelect.getSelectedCatalog()!=null){
            //     panelMove.setSelectedCatalogId(panelProductSelect.getSelectedCatalog().getprodCatalogId());
            // }

            //if(panelProductSelect.getSelectedCategory()!=null){
            //    panelMove.setSelecteCategoryId(panelProductSelect.getSelectedCategory().getProductCategoryId());
            //}
        }

    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        //        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        //      doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    @Override
    public JButton getOkButton() {
        return okButton;
    }

    @Override
    public JButton getCancelButton() {
        return cancelButton;
    }

    @Override
    public JPanel getPanel() {
        return this;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel jpanelProductCopy;
    private javax.swing.JPanel jpanelProductMove;
    public javax.swing.JButton okButton;
    private javax.swing.JPanel panelProductSelection;
    // End of variables declaration//GEN-END:variables

    static public class CategoryCopyMoveAction extends ScreenAction {

        public static final String nameStr = "Category Copy/Move";
        final String iconPathStr = "";
        final String iconPathSmallStr = "";

        public CategoryCopyMoveAction() {
            super(ActionType.PRODUCT_CATEGORY_MAINTAIN_ACTION, ControllerOptions.getSession(), ControllerOptions.getDesktopPane());
            this.setName(nameStr);
            this.setIconPath(iconPathStr);
            this.setIconPathSmall(iconPathSmallStr);
            loadIcons();
        }

        public void actionPerformed(ActionEvent e) {
            ControllerOptions controllerOptions = new ControllerOptions();
            CategoryManagePanel categoryProductManagePanel = new CategoryManagePanel(controllerOptions);
            SimpleFrameMainScreen partyMain = new SimpleFrameMainScreen(categoryProductManagePanel, CategoryProductManagePanel.module, session);
            partyMain.loadSinglePanelInternalFrame(CategoryProductManagePanel.module, desktopPane);
        }

        @Override
        public Action getAction() {
            return this;
        }
    }
}
