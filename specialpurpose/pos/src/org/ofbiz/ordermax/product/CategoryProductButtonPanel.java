/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.ofbiz.ordermax.product;

/**
 *
 * @author sureshbalan
 */
public class CategoryProductButtonPanel extends javax.swing.JPanel {

    /**
     * Creates new form CategoryProductButtonPanel
     */
    public CategoryProductButtonPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNewCategory = new javax.swing.JButton();
        btnSaveCategory = new javax.swing.JButton();
        btnDeleteCategory = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnNewProduct = new javax.swing.JButton();
        btnSaveProduct = new javax.swing.JButton();
        btnDeleteProduct = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnReloadTree = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout());

        btnNewCategory.setText("New Category");
        btnNewCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCategoryActionPerformed(evt);
            }
        });
        add(btnNewCategory);

        btnSaveCategory.setText("Save Category");
        btnSaveCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCategoryActionPerformed(evt);
            }
        });
        add(btnSaveCategory);

        btnDeleteCategory.setText("Delete Category");
        btnDeleteCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCategoryActionPerformed(evt);
            }
        });
        add(btnDeleteCategory);
        add(jLabel2);

        btnNewProduct.setText("New Product");
        add(btnNewProduct);

        btnSaveProduct.setText("Save Product");
        btnSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProductActionPerformed(evt);
            }
        });
        add(btnSaveProduct);

        btnDeleteProduct.setText("Delete Product");
        add(btnDeleteProduct);
        add(jLabel3);

        btnReloadTree.setText("Reload Product Tree");
        btnReloadTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadTreeActionPerformed(evt);
            }
        });
        add(btnReloadTree);

        okButton.setText("Ok");
        add(okButton);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCategoryActionPerformed
        /*        editDepartmentId.setText("");
        editDepartmentName.setText("");
        comboPostalChanged(DEPARTMENT_TAB_INDEX);
        */
    }//GEN-LAST:event_btnNewCategoryActionPerformed

    private void btnSaveCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCategoryActionPerformed
        /*        editBrandId.setText("");
        editBrandName.setText("");
        comboPostalChanged(BRAND_TAB_INDEX);
        * */
    }//GEN-LAST:event_btnSaveCategoryActionPerformed

    private void btnDeleteCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCategoryActionPerformed
        /*clearProductDialogFields();
        comboPostalChanged(PRODUCT_TAB_INDEX);
        if (currTreeNode != null) {

            if (currTreeNode.getNodeName().equals(ProductTreeNode.ProdutNodeName)) {
                if (currTreeParentNode != null) {
                    comboBrand.getModel().setSelectedItem(currTreeParentNode._name);
                }
            } else if (currTreeNode.getNodeName().equals(BrandTreeNode.BrandNodeName)) {
                comboBrand.getModel().setSelectedItem(currTreeNode._name);
            }

            //    protected TreeNode currTreeNode = null;
            //    protected TreeNode currTreeParentNode = null;

        }*/
    }//GEN-LAST:event_btnDeleteCategoryActionPerformed

    private void btnSaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProductActionPerformed
        /*Delegator delegator = (Delegator) session.getDelegator();

        if (jTabbedPane1.getSelectedIndex() == PRODUCT_TAB_INDEX) {
            if (isValidFields() == false) {
                return;
            }
            // save the changes
            save();
            loadProductTree();
        } else if (jTabbedPane1.getSelectedIndex() == BRAND_TAB_INDEX) {
            try {

                String depId = getDepartmentCode();
                String depName = getDepartmentName();
                String brandName = editBrandName.getText();

                String brandId = depId + "_" + brandName.replaceAll("\\s", "");

                if (brandId != null && brandId.length() > 20) {
                    brandId = brandId.substring(0, 19);
                }
                editBrandId.setText(brandId);
                BrandTreeNode brandNode = new BrandTreeNode(brandId, brandName, false);
                //GenericValue genvalBrand = brandNode.loadDetails(brandId, delegator);
                //if (genvalBrand == null) {
                    //                    brandNode.
                    //                    brandNode.creatGenericValue(delegator);
                    GenericValue brandCategory = PosProductHelper.getProductCategory(brandId, delegator);
                    if (brandCategory == null) {
                        delegator.create(PosProductHelper.createProductCategory(brandId, depId, "CATALOG_CATEGORY", brandName, delegator));
                    }

                    GenericValue rollUp = PosProductHelper.getProductCategoryRollup(brandId, depId, delegator);
                    if (rollUp == null) {
                        rollUp = PosProductHelper.createProductCategoryRollup(brandId, depId, delegator);
                        delegator.create(rollUp);
                        Debug.logInfo("create [createProductCategoryRollup] " + rollUp, module);
                    }

                    loadProductTree();
                    //}

                //now add the node to tree

            } catch (GenericEntityException ex) {
                Logger.getLogger(ProductDetailEditDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jTabbedPane1.getSelectedIndex() == DEPARTMENT_TAB_INDEX) {
            String depId = editDepartmentId.getText();
            String depName = editDepartmentName.getText();

            GenericValue brandCategory = PosProductHelper.getProductCategory(depId, delegator);
            if (brandCategory == null) {
                try {
                    delegator.create(PosProductHelper.createProductCategory(depId, rootNode._id, "CATALOG_CATEGORY", depName, delegator));
                } catch (GenericEntityException ex) {
                    Logger.getLogger(ProductDetailEditDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            GenericValue rollUp = PosProductHelper.getProductCategoryRollup(depId, rootNode._id, delegator);
            if (rollUp == null) {
                try {
                    rollUp = PosProductHelper.createProductCategoryRollup(depId, rootNode._id, delegator);
                    delegator.create(rollUp);
                    Debug.logInfo("create [createProductCategoryRollup] " + rollUp, module);
                } catch (GenericEntityException ex) {
                    Logger.getLogger(ProductDetailEditDialog.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            loadProductTree();

        }
        */
    }//GEN-LAST:event_btnSaveProductActionPerformed

    private void btnReloadTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadTreeActionPerformed
        //        doClose(RET_CANCEL);
    }//GEN-LAST:event_btnReloadTreeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnDeleteCategory;
    public javax.swing.JButton btnDeleteProduct;
    public javax.swing.JButton btnNewCategory;
    public javax.swing.JButton btnNewProduct;
    public javax.swing.JButton btnReloadTree;
    public javax.swing.JButton btnSaveCategory;
    public javax.swing.JButton btnSaveProduct;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
